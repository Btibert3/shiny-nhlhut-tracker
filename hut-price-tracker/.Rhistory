shiny::runApp()
runApp()
suppressPackageStartupMessages(library(dplyr))
runApp()
runApp()
library(neo4r)
?readr::read_csv
help("read_csv")
help("readr::read_csv")
runApp()
## load the data every time the server loads
hutdb = readRDS("../data/hut.rds")
glimpse(hutdb)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$player
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
glimpse(hutdb)
runApp()
/assets/img/headshots/active/x6904.png
runApp()
runApp()
runApp()
ch = DBI::dbConnect(RSQLite::SQLite(), path = "../data/prices.db")
glimpse(hutdb)
reticulate::repl_python()
## to start, use a sqlite database
ch = DBI::dbConnect(RSQLite::SQLite(), path = "../data/prices.db")
glimpse(hutdb)
runApp()
runApp()
runApp()
## to start, use a sqlite database
ch = DBI::dbConnect(RSQLite::SQLite(), path = "../data/prices.db")
tbl(ch, "prices") %>% head()
db_list_tables(ch)
runApp()
## to start, use a sqlite database
ch = DBI::dbConnect(RSQLite::SQLite(), path = "../data/prices.db")
db_list_tables(ch)
db_list_tables(ch)
runApp()
## to start, use a sqlite database
ch = DBI::dbConnect(RSQLite::SQLite(), path = "../data/prices.db")
db_list_tables(ch)
runApp()
db_list_tables(ch)
runApp()
runApp()
runApp()
## to start, use a sqlite database
ch = DBI::dbConnect(RSQLite::SQLite(), path = "../data/prices.db")
DBI::dbListTables(ch)
con <- neo4j_api$new(url = "http://localhost:7474",
user = "neo4j",
password = "password")
con$ping()
runApp()
runApp()
runApp()
shiny::runApp()
